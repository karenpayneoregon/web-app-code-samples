// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using WebApplication1.Data;
using WebApplication1.Models;

namespace WebApplication1.Data.Configurations
{
    public partial class EmployeesConfiguration : IEntityTypeConfiguration<Employees>
    {
        public void Configure(EntityTypeBuilder<Employees> entity)
        {
            entity.HasKey(e => e.EmployeeId);

            entity.Property(e => e.EmployeeId)
            .HasComment("Id")
            .HasColumnName("EmployeeID");
            entity.Property(e => e.Address)
            .HasMaxLength(60)
            .HasComment("Street");
            entity.Property(e => e.BirthDate)
            .HasComment("Birth date")
            .HasColumnType("datetime");
            entity.Property(e => e.City).HasMaxLength(15);
            entity.Property(e => e.Extension).HasMaxLength(4);
            entity.Property(e => e.FirstName)
            .IsRequired()
            .HasMaxLength(10)
            .HasComment("First name");
            entity.Property(e => e.HireDate)
            .HasComment("Hiredate")
            .HasColumnType("datetime");
            entity.Property(e => e.HomePhone)
            .HasMaxLength(24)
            .HasComment("Home phone");
            entity.Property(e => e.LastName)
            .IsRequired()
            .HasMaxLength(20)
            .HasComment("Last name");
            entity.Property(e => e.PostalCode).HasMaxLength(10);
            entity.Property(e => e.Region).HasMaxLength(15);
            entity.Property(e => e.ReportsTo).HasComment("Manager");
            entity.Property(e => e.TitleOfCourtesy)
            .HasMaxLength(25)
            .HasComment("Title");

            entity.HasOne(d => d.ContactTypeIdentifierNavigation).WithMany(p => p.Employees)
            .HasForeignKey(d => d.ContactTypeIdentifier)
            .HasConstraintName("FK_Employees_ContactType");

            entity.HasOne(d => d.CountryIdentifierNavigation).WithMany(p => p.Employees)
            .HasForeignKey(d => d.CountryIdentifier)
            .HasConstraintName("FK_Employees_Countries");

            entity.HasOne(d => d.ReportsToNavigation).WithMany(p => p.InverseReportsToNavigation)
            .HasForeignKey(d => d.ReportsTo)
            .HasConstraintName("FK_Employees_Employees");

            entity.HasMany(d => d.Territory).WithMany(p => p.Employee)
            .UsingEntity<Dictionary<string, object>>(
                "EmployeeTerritories",
                r => r.HasOne<Territories>().WithMany()
                    .HasForeignKey("TerritoryId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_EmployeeTerritories_Territories"),
                l => l.HasOne<Employees>().WithMany()
                    .HasForeignKey("EmployeeId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_EmployeeTerritories_Employees"),
                j =>
                {
                    j.HasKey("EmployeeId", "TerritoryId").IsClustered(false);
                });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Employees> entity);
    }
}
