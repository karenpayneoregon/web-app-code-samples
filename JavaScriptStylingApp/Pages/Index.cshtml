@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script src="js/stylingHelpers.js"></script>



<div class="container">
    <div class="row">
        <h1 class="fs-5">Demo</h1>
    </div>



    <div class="row">
        <div id="target1" style="border: black; border-style: solid !important; width: 30em; padding: 1em; text-align:left;">
            This is a simple element
        </div>
    </div>


    <div class="row mt-4 mb-lg-4">
        <div class="col-auto">
            <button id="forTarget1" class="btn btn-primary">Change</button>
        </div>
        <div class="col-auto">
            <button id="removeProperty" class="btn btn-primary">Remove</button>
        </div>
        <div class="col-auto">
            <button id="getStyle" class="btn btn-primary">Get</button>
        </div>
        <div class="col-auto">
            <button id="reload" class="btn btn-primary">Reload</button>
        </div>
    </div>




</div>

<script>
    document.getElementById("forTarget1").addEventListener("click", function () {
        var element = document.getElementById('target1');
        addStyle(element, 'border-style', 'dotted', '!important');
        addStyle(element, 'border-color', 'red', '!important');
    });
    document.getElementById("reload").addEventListener("click", function () {
        location.reload();
    });
    document.getElementById("removeProperty").addEventListener("click", function () {
        var element = document.getElementById('target1');
        removeStyle(element, 'border');
    });

    document.getElementById("getStyle").addEventListener("click", function () {
        var element = document.getElementById('target1');

        var propertyValue = getElementPropertyValue(element, 'border-style');

        if (propertyValue) {
            alert(propertyValue);
        } else {
            alert('Property not set');
        }
    });




</script>